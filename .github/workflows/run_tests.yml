name: 테스트 실행

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.9]

    name: ${{ matrix.python }}에서의 파이썬

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      # https://github.com/conda-incubator/setup-miniconda#caching-environments 에 따름
      - name: Mambaforge 설정
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: 23.3.1-0  # Use a specific valid version
          activate-environment: anaconda-client-env
          use-mamba: true
          python-version: ${{ matrix.python }}

      - name: 날짜 가져오기
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Conda 환경 캐시
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{ runner.os }}--${{ runner.arch }}--${{
            steps.get-date.outputs.today }}-${{
            hashFiles('environment-caching.yml') }}-${{ env.CACHE_NUMBER
            }}
        env:
          # etc/example-environment.yml이 변경되지 않은 경우 캐시를 재설정하려면 이 값을 늘립니다.
          CACHE_NUMBER: 0
          id: cache

      - name: 환경 업데이트
        run:
          mamba env update -n anaconda-client-env -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: 파이썬 버전 표시
        shell: bash -el {0}
        run: python -V

      - name: Conda 정보
        shell: bash -el {0}
        run: conda info

      - name: Conda 목록
        shell: bash -el {0}
        run: conda list

      - name: cargo 환경 캐시
        uses: Swatinem/rust-cache@v2      

      - name: mdbook 설치
        shell: bash -el {0}
        run: cargo install mdbook mdbook-admonish mdbook-cmdrun

      # - name: 테스트 실행
      #   shell: bash -el {0}
      #   run: make test
